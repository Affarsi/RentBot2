from datetime import date
from typing import Optional

from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.widgets.kbd import Button
from aiogram.types import CallbackQuery, Message
from aiogram_dialog.widgets.input import MessageInput

from src.database.requests.object import db_get_object, db_update_object
from src.database.requests.user import db_get_user
from src.dialogs.dialogs_states import EditObject, UserDialog
from src.payments.payment_handler import withdraw_user_balance, InsufficientFundsError
from src.utils.media_group_creator import create_media_group


# –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É –¥–ª—è edit menu
async def edit_menu_create_and_send_media_group(
        object_dict_data: dict,
        dialog_manager: DialogManager,
        edit_data: dict=None
):
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã
    media_group = await create_media_group(dict_data=object_dict_data, edit_data=edit_data)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã –∏ –¥–∏–∞–ª–æ–≥–∞ —Å edit_menu
    await dialog_manager.event.bot.send_media_group(
        chat_id=dialog_manager.event.from_user.id,
        media=media_group
    )


# –ó–∞–ø—É—Å–∫ edit_menu_dialog –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ open_object_id
async def start_edit_menu_dialog(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    callback_data = callback.data.split('_')[1]

    states = {
        'conditions': EditObject.edit_conditions,
        'description': EditObject.edit_description,
        'contacts': EditObject.edit_contacts,
        'photos': EditObject.edit_photos
    }

    if callback_data in states:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–±—ä–µ–∫—Ç–µ
        object_id = dialog_manager.dialog_data.get('open_object_id')
        objects_list = await db_get_object(object_id=object_id)
        object_dict_data = objects_list[0]

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã dialog_data
        is_admin = dialog_manager.dialog_data.get('is_admin')
        is_limit_object_max = dialog_manager.dialog_data.get('is_limit_object_max')
        is_free_edit_object = dialog_manager.dialog_data.get('is_free_edit_object')

        # –ù–∞—á–∏–Ω–∞–µ–º AdminEditObject –¥–∏–∞–ª–æ–≥ –∏ –ø–µ—Ä–µ–¥–∞–µ–º start_data
        await dialog_manager.start(state=states[callback_data], data={'open_object_dict_data': object_dict_data,
                                                                      'open_object_id': object_id,
                                                                      'is_admin': is_admin,
                                                                      'is_limit_object_max': is_limit_object_max,
                                                                      'is_free_edit_object': is_free_edit_object}
        )


# –ü—Ä–µ–∫—Ä–∞—â–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
async def stop_edit_object(
        callback: CallbackQuery=None,
        widget: Button=None,
        dialog_manager: DialogManager=None
):
    dialog_manager.show_mode = ShowMode.SEND

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–±—ä–µ–∫—Ç–µ
    object_dict_data = dialog_manager.start_data.get('open_object_dict_data')

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É
    await edit_menu_create_and_send_media_group(object_dict_data, dialog_manager)


# –ú–µ–Ω–µ–¥–∂–µ—Ä edit_object_input
async def edit_object_input(
        widget: MessageInput or Button,
        dialog_manager: DialogManager,
        field_name: str,
        photos: list=None,
        message: Message=None
):
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if photos is None:
        new_value = message.text.strip()
    else:
        new_value = photos
    dialog_manager.dialog_data[f'edit_object_data_{field_name}'] = new_value

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–±—ä–µ–∫—Ç–µ
    object_dict_data = dialog_manager.start_data.get('open_object_dict_data')

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É
    await edit_menu_create_and_send_media_group(object_dict_data, dialog_manager, dialog_manager.dialog_data)

    dialog_manager.show_mode = ShowMode.DELETE_AND_SEND  # —á—Ç–æ–±—ã –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø–∞ —Ä–∞–Ω—å—à–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å, —á–µ–º —Å–º—Å –æ—Ç –±–æ—Ç–∞
    await dialog_manager.switch_to(EditObject.result_and_edit_menu)


# –ò–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
async def edit_object_conditions_input(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager
):
    await edit_object_input(widget, dialog_manager, 'conditions', message=message)


# –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
async def edit_object_description_input(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager
):
    await edit_object_input(widget, dialog_manager, 'description', message=message)


# –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –æ–±—ä–µ–∫—Ç–∞ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
async def edit_object_contacts_input(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager
):
    await edit_object_input(widget, dialog_manager, 'contacts', message=message)


# –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ–±—ä–µ–∫—Ç–∞
async def edit_object_photos_input(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager
):
    # –ü–æ–ª—É—á–∞–µ–º file id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    file_id = message.photo[-1].file_id

    # –°–º–æ—Ç—Ä–∏–º, –±—ã–ª–∏ –ª–∏ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    new_photo_list = dialog_manager.dialog_data.get('edit_object_data_photos')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    if not new_photo_list:
        new_photo_list = [file_id]
    else:
        new_photo_list.append(file_id)

    # –£—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    dialog_manager.dialog_data['edit_object_data_photos'] = new_photo_list


# –£–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
async def dell_photos_edit_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    # –û—á–∏—â–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ dialog_data
    try:
        photo_list = dialog_manager.dialog_data.pop('edit_object_data_photos')
    except KeyError:
        await dialog_manager.event.answer('–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π')
        return

    # –û–ø–æ–≤–µ—â–∞–µ–º –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await dialog_manager.event.answer(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(photo_list)}\n'
                                      f'–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!')


# –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ–±—ä–µ–∫—Ç–∞ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
async def confirm_edit_photo_and_go_to_finaly(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        photo_list = dialog_manager.dialog_data.get('edit_object_data_photos')
        if len(photo_list) < 2 or len(photo_list) > 8:
            await dialog_manager.event.answer('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ–ª—å—à–µ 2—É—Ö –∏ –Ω–µ –º–µ–Ω—å—à–µ 8 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!')
            return
    except KeyError:
        await dialog_manager.event.answer('–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π')
        return

    await edit_object_input(widget, dialog_manager, 'photos', photos=photo_list)


# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!
async def submit_edit_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    dialog_manager.show_mode = ShowMode.AUTO

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    new_object_data = {'status': 'üîÑ'}
    open_object_dict_data = dialog_manager.start_data.get('open_object_dict_data')
    user_dict = await db_get_user(telegram_id=callback.from_user.id)
    user_id = user_dict['id']
    balance = user_dict['balance']
    is_admin = dialog_manager.start_data.get('is_admin')
    is_limit_object_max = dialog_manager.start_data.get('is_limit_object_max')

    # –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è - –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø–ª–∞—Ç–Ω–æ–µ –∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    if open_object_dict_data.get('status') == '‚ùå':
        is_free_edit_object = dialog_manager.start_data.get('is_free_edit_object')

        if is_free_edit_object:
            # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ
            new_object_data['payment_date'] = None
        else:
            # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–Ω–æ–µ
            new_object_data['payment_date'] = date.today()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –∏ –ø—ã—Ç–∞–µ–º—Å—è —Å–ø–∏—Å–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–ª–∞–Ω—Å–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                await withdraw_user_balance(
                    is_admin=is_admin, is_limit_object_max=is_limit_object_max,
                    amount=100, balance=balance, user_id=user_id, callback=callback
                )
            except InsufficientFundsError: return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞
    dialog_data = dialog_manager.dialog_data
    if 'edit_object_data_conditions' in dialog_data:
        new_object_data['conditions'] = dialog_data['edit_object_data_conditions']
    if 'edit_object_data_description' in dialog_data:
        new_object_data['description'] = dialog_data['edit_object_data_description']
    if 'edit_object_data_contacts' in dialog_data:
        new_object_data['contacts'] = dialog_data['edit_object_data_contacts']
    if 'edit_object_data_photos' in dialog_data:
        new_object_data['photos'] = dialog_data['edit_object_data_photos']

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –≤ –ë–î –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
    await db_update_object(object_id=dialog_manager.start_data.get('open_object_id'),
                           object_data=new_object_data)

    # –û–ø–æ–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!')
    dialog_manager.show_mode = ShowMode.AUTO
    await dialog_manager.start(state=UserDialog.my_objects_manager)