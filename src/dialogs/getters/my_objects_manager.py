import datetime
from datetime import date
from config import Config

from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.widgets.kbd import Button, Select

from src.database.requests.object import db_get_object, db_update_object, db_new_object
from src.database.requests.user import db_get_user, db_update_user
from src.dialogs.dialogs_states import CreateObject, UserDialog
from src.utils.media_group_creator import send_media_group


# –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∏–ª–∏ –ø–ª–∞—Ç–Ω–æ–µ –±—É–¥–µ—Ç –¥–ª—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ/—Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
async def is_edit_create_object_paid(telegram_id: int, user_dict: dict) -> dict:
    obj_limit = user_dict.get('obj_limit')
    obj_list_len = user_dict.get('obj_list_len')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    is_admin = False
    if telegram_id in Config.admin_ids:
        result = False
        is_admin = True
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª –ª–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–≤–æ–π –ª–∏–º–∏—Ç –æ–±—ä–µ–∫—Ç–æ–≤?
        result = True if obj_list_len >= int(obj_limit) else False

    return {'is_paid': result, 'is_admin': is_admin}


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
async def my_objects_getter(dialog_manager: DialogManager, **kwargs):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    telegram_id = dialog_manager.event.from_user.id
    object_list = await db_get_object(telegram_id=telegram_id) # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ –ë–î
    user_dict = await db_get_user(telegram_id=telegram_id)

    # –ï—Å–ª–∏ —É –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤
    if not object_list:
        return {'my_object_list': [['–£ –≤–∞—Å –Ω–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤', 1]]}

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
    my_object_list = []
    for obj in object_list:
        id = obj['id']
        status = obj['status']
        generate_id = obj['generate_id']
        country = obj['country']
        my_object_list.append([f'{status} | ID: {generate_id} | {country}', str(id)])

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç–Ω–æ–µ –∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
    res_dict = await is_edit_create_object_paid(telegram_id, user_dict)
    is_create_object_paid = res_dict.get('is_paid')
    is_admin = res_dict.get('is_admin')
    dialog_manager.dialog_data['is_create_object_paid'] = is_create_object_paid
    dialog_manager.dialog_data['is_admin'] = is_admin

    return {'my_object_list': my_object_list, 'is_limit_object_max': is_create_object_paid}


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞. –ó–∞–ø—É—Å–∫ –¥–∏–∞–ª–æ–≥–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–∞
async def start_create_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    user_dict = await db_get_user(telegram_id=callback.from_user.id)
    user_id = user_dict['id']
    balance = user_dict['balance']

    is_admin = dialog_manager.dialog_data.get('is_admin')
    is_create_object_paid = dialog_manager.dialog_data.get('is_create_object_paid')
    is_free_create_object = False # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±—É–¥–µ—Ç –ø–ª–∞—Ç–Ω—ã–º

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
    if not is_admin and is_create_object_paid:
        # –ó–∞–∫–æ–Ω—á–∏–ª—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–º–∏—Ç
        if balance >= 100:
            # –ï—Å—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
            await db_update_user(user_id=user_id, plus_balance=-100) # –°–ø–∏—Å—ã–≤–∞–µ–º 100 —Ä—É–±–ª–µ–π —Å –±–∞–ª–∞–Ω—Å–∞
            await callback.answer('–° –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–Ω–æ: 100—Ä—É–±.!')
        else:
            # –ù–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
            await callback.answer('–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
            return
    else:
        # –ï—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–º–∏—Ç
        is_free_create_object = True # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±—É–¥–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º

    # –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
    await dialog_manager.start(CreateObject.get_country, data={'is_free_create_object': is_free_create_object})


# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (send media_group) —Å –º–µ–Ω—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
async def open_my_object(
        callback: CallbackQuery,
        widget: Select,
        dialog_manager: DialogManager,
        item_id: str
):
    object_id = int(item_id)
    chat_id = dialog_manager.event.message.chat.id

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã
    object_data = await send_media_group(dialog_manager, object_id, chat_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º id –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    dialog_manager.dialog_data['open_object_id'] = object_id
    dialog_manager.dialog_data['open_object_data'] = object_data

    # –ß—Ç–æ–±—ã –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–Ω—å—à–µ —á–µ–º —Å–º—Å –æ—Ç –±–æ—Ç–∞
    dialog_manager.show_mode = ShowMode.DELETE_AND_SEND

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–≤–æ–¥–∏–º –º–µ–Ω—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    if object_data['status'] == '‚úÖ':
        await dialog_manager.switch_to(UserDialog.my_open_object_confirmed)
    elif object_data['status'] == 'üîÑ':
        await dialog_manager.switch_to(UserDialog.my_open_object_moderated)
    else:
        await dialog_manager.switch_to(UserDialog.my_open_object_deleted)


# –£–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
async def delete_my_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    object_id = dialog_manager.dialog_data.get('open_object_id')
    object_data = dialog_manager.dialog_data.get('open_object_data')

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ —Å –≥—Ä—É–ø–ø—ã
    message_ids = object_data['message_ids']
    message_ids = message_ids.split(', ')
    try:
        await dialog_manager.event.bot.delete_messages(chat_id=Config.chat, message_ids=message_ids)
    except:
        print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç. –°–∫—Ä–∏–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ message_id')

    # –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞ –Ω–∞ '–£–¥–∞–ª—ë–Ω'
    new_object_data = {'status': '‚ùå', 'delete_reason': '–£–¥–∞–ª–µ–Ω–æ –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–æ–º!', 'message_ids': None}
    await db_update_object(object_id=object_id, object_data=new_object_data)

    await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!')
    await dialog_manager.back()


# –ò–Ω–≤–µ—Ä—Å–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π is_edit_menu_open
async def invert_edit_menu_open(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    is_edit_menu_open = dialog_manager.dialog_data.get('is_edit_menu_open', False)

    # –ò–Ω–≤–µ—Ä—Å–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    dialog_manager.dialog_data['is_edit_menu_open'] = not is_edit_menu_open


# –ò–Ω–≤–µ—Ä—Å–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π is_delete_object_confirm_menu
async def invert_delete_object_confirm_menu(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    is_delete_object_confirm_menu = dialog_manager.dialog_data.get('is_delete_object_confirm_menu', False)

    # –ò–Ω–≤–µ—Ä—Å–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    dialog_manager.dialog_data['is_delete_object_confirm_menu'] = not is_delete_object_confirm_menu


# Getter, —Å–æ–æ–±—â–∞—é—â–∏–π, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ edit_menu/delete_menu –∏–ª–∏ –Ω–µ—Ç
async def object_confirmed_getter(dialog_manager: DialogManager, **kwargs):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    object_data = dialog_manager.dialog_data.get('open_object_data')
    payment_date = object_data['payment_date']
    is_edit_menu_open = dialog_manager.dialog_data.get('is_edit_menu_open')
    is_delete_object_confirm_menu = dialog_manager.dialog_data.get('is_delete_object_confirm_menu')

    # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –¥–Ω–µ–π
    if payment_date is None:
        # –ë–µ—Å—Å—Ä–æ—á–Ω—ã–π –æ–±—ä–µ–∫—Ç
        days_left = '–ë–µ—Å—Å—Ä–æ—á–Ω–æ'
    else:
        end_date = payment_date + datetime.timedelta(days=365)
        days_left = abs(end_date - payment_date)
        days_left = str(days_left).split(',')[0]

    return {'edit_menu_open': is_edit_menu_open,
            'delete_object_confirm_menu': is_delete_object_confirm_menu,
            'days_left': days_left}


# –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
async def my_object_delete_getter(dialog_manager: DialogManager, **kwargs):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    telegram_id = dialog_manager.event.from_user.id
    user_dict = await db_get_user(telegram_id=telegram_id)
    obj_limit = user_dict.get('obj_limit')
    obj_list_len = user_dict.get('obj_list_len')

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è
    delete_reason = dialog_manager.dialog_data.get('open_object_data').get('delete_reason')

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç–Ω–æ–µ –ª–∏ –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
    if telegram_id in Config.admin_ids:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        is_limit_object_max = False
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–ª –ª–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–≤–æ–π –ª–∏–º–∏—Ç –æ–±—ä–µ–∫—Ç–æ–≤?
        is_limit_object_max = True if obj_list_len >= int(obj_limit) else False

    return {'delete_reason': delete_reason, 'is_limit_object_max': is_limit_object_max}


# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
async def restore_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    # –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∏–ª–∏ –ø–ª–∞—Ç–Ω–æ–µ? –ê–¥–º–∏–Ω –Ω–µ –∞–¥–º–∏–Ω?
    is_admin = dialog_manager.dialog_data.get('is_admin')
    is_create_object_paid = dialog_manager.dialog_data.get('is_create_object_paid')

    # –í—ã—á–∏—Ç–∞–µ–º –∏–ª–∏ –Ω–µ –≤—ã—á–∏—Ç–∞–µ–º –¥–µ–Ω—å–≥–∏ —Å –±–∞–ª–∏–∫–∞ —é–∑–µ—Ä–∞


    # –î–∞–ª–µ–µ - —Ç—É–ø–æ –æ–±—ä–µ–∫—Ç—É –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ç–æ, —á—Ç–æ –æ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∫–µ —Ç–µ–ø–µ—Ä—å. –ò –º–µ–Ω—è–µ–º –µ–º—É payment_date
    # –≤—Å—ë
    ...

    # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    # telegram_id = callback.from_user.id
    # user_dict = await db_get_user(telegram_id=callback.from_user.id)
    # user_id = user_dict['id']
    # obj_max = int(user_dict['obj_limit'])
    # obj_len = user_dict['obj_list_len']
    # balance = user_dict['balance']
    #
    # is_free_create_object = False # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±—É–¥–µ—Ç –ø–ª–∞—Ç–Ω—ã–º
    # is_admin = False # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    #
    # # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    # if telegram_id in Config.admin_ids:
    #     is_admin = True
    #     is_free_create_object = True
    #
    # # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
    # if not is_admin and obj_len >= obj_max:
    #     # –ó–∞–∫–æ–Ω—á–∏–ª—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–º–∏—Ç
    #     if balance >= 100:
    #         # –ï—Å—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
    #         await db_update_user(user_id=user_id, plus_balance=-100) # –°–ø–∏—Å—ã–≤–∞–µ–º 100 —Ä—É–±–ª–µ–π —Å –±–∞–ª–∞–Ω—Å–∞
    #         await callback.answer('–° –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–Ω–æ: 100—Ä—É–±.!')
    #     else:
    #         # –ù–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
    #         await callback.answer('–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
    #         return
    # else:
    #     # –ï—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–º–∏—Ç
    #     is_free_create_object = True # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±—É–¥–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º
    #
    # # –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –±–µ—Å—Å—Ä–æ—á–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    # if dialog_manager.start_data.get('is_free_create_object'):
    #     dialog_manager.dialog_data['payment_date_no_limit'] = True
    #
    # # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –≤ –ë–î –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
    # await db_update_object(object_id=)
    #
    # # –û–ø–æ–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    # await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!')
    # dialog_manager.show_mode = ShowMode.AUTO # –í –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
    # await dialog_manager.done()