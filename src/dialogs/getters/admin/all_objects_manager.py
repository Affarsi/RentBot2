from aiogram.types import CallbackQuery, Message
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.widgets.kbd import Button, Select
from aiogram_dialog.widgets.input import MessageInput

from src.database.requests.object import db_get_object, db_delete_object, db_update_object
from src.database.requests.user import db_get_user, db_update_user
from src.dialogs.dialogs_states import CreateObject, UserDialog, AdminDialog
from src.utils.media_group_creator import create_media_group


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º
async def all_objects_count_getter(**kwargs):
    all_object_list = await db_get_object()

    status_mapping = {
        "üîÑ": "on_moderation_count",
        "‚úÖ": "submit_count",
        "‚ùå": "deleted_count"
    }

    status_counts = {key: 0 for key in status_mapping.values()}

    for obj in all_object_list:
        status = obj.get("status")
        if status in status_mapping:
            status_counts[status_mapping[status]] += 1

    return status_counts


async def all_objects_count_and_sg_list_getter(**kwargs):
    all_object_list = await db_get_object()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
    result_summary = {
        "on_moderation_count": 0,
        "submit_count": 0,
        "deleted_count": 0,
        "deleted_objects_list": [],
        "confirmed_objects_list": [],
        "moderated_objects_list": []
    }

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞
    for obj in all_object_list:
        status = obj.get("status")
        id = obj['id']
        generate_id = obj['generate_id']
        country = obj['country']

        if status == "üîÑ":
            result_summary["on_moderation_count"] += 1
            result_summary["moderated_objects_list"].append([f'{status} | ID: {generate_id} | {country}', str(id)])
        elif status == "‚úÖ":
            result_summary["submit_count"] += 1
            result_summary["confirmed_objects_list"].append([f'{status} | ID: {generate_id} | {country}', str(id)])
        elif status == "‚ùå":
            result_summary["deleted_count"] += 1
            result_summary["deleted_objects_list"].append([f'{status} | ID: {generate_id} | {country}', str(id)])

    return result_summary


# –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä–µ–∫—Ç–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "–£–¥–∞–ª–µ–Ω–æ"
async def admin_open_object(
        callback: CallbackQuery,
        widget: Select,
        dialog_manager: DialogManager,
        item_id: str
):
    # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    object_id = int(item_id)
    object_data = await db_get_object(object_id=object_id)
    object_data = object_data[0]
    chat_id = dialog_manager.event.message.chat.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º id –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–±—ä–µ—Ç–∞
    dialog_manager.dialog_data['admin_open_object_id'] = object_id

    # –°–æ–∑–¥–∞–Ω–∏–µ media_group
    media_group = await create_media_group(dict_data=object_data)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ media_group
    await dialog_manager.event.bot.send_media_group(
        chat_id=chat_id,
        media=media_group
    )

    # –ß—Ç–æ–±—ã –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–Ω—å—à–µ —á–µ–º —Å–º—Å –æ—Ç –±–æ—Ç–∞
    dialog_manager.show_mode = ShowMode.DELETE_AND_SEND

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–≤–æ–¥–∏–º –º–µ–Ω—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    if object_data['status'] == '‚úÖ':
        await dialog_manager.switch_to(AdminDialog.admin_open_object_confirmed)
    elif object_data['status'] == 'üîÑ':
        await dialog_manager.switch_to(AdminDialog.admin_open_object_moderated)
    else:
        await dialog_manager.switch_to(AdminDialog.admin_open_object_deleted)


# –ò–Ω–≤–µ—Ä—Å–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π is_admin_edit_menu_open
async def invert_admin_edit_menu_open(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    is_admin_edit_menu_open = dialog_manager.dialog_data.get('is_admin_edit_menu_open', False)

    # –ò–Ω–≤–µ—Ä—Å–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    dialog_manager.dialog_data['is_admin_edit_menu_open'] = not is_admin_edit_menu_open


# –ò–Ω–≤–µ—Ä—Å–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π is_admin_delete_object_confirm_menu
async def invert_admin_dell_obj_confirm_menu(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    is_admin_delete_object_confirm_menu = dialog_manager.dialog_data.get('is_admin_delete_object_confirm_menu', False)

    # –ò–Ω–≤–µ—Ä—Å–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    dialog_manager.dialog_data['is_admin_delete_object_confirm_menu'] = not is_admin_delete_object_confirm_menu


# Getter, —Å–æ–æ–±—â–∞—é—â–∏–π, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ edit_menu/delete_menu –∏–ª–∏ –Ω–µ—Ç
async def admin_open_object_confirmed_getter(dialog_manager: DialogManager, **kwargs):
    is_edit_menu_open = dialog_manager.dialog_data.get('is_admin_edit_menu_open')
    is_delete_object_confirm_menu = dialog_manager.dialog_data.get('is_admin_delete_object_confirm_menu')
    return {'admin_dit_menu_open': is_edit_menu_open,
            'admin_delete_object_confirm_menu': is_delete_object_confirm_menu}


# –£–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
async def admin_delete_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    object_id = dialog_manager.dialog_data.get('admin_open_object_id')

    # –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞ –Ω–∞ '–£–¥–∞–ª—ë–Ω'
    new_object_data = {'status': '‚ùå'}
    await db_update_object(object_id=object_id, object_data=new_object_data)

    # –û–ø–æ–≤–µ—â–∞–µ–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–∫–Ω–æ
    await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!')
    await dialog_manager.switch_to(AdminDialog.all_objects_confirmed)