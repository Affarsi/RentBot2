import datetime

from aiogram.types import CallbackQuery, Message
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.widgets.kbd import Button, Select
from aiogram_dialog.widgets.input import MessageInput

from config import Config
from src.database.requests.object import db_get_object, db_update_object
from src.database.requests.user import db_get_user
from src.dialogs.dialogs_states import AdminDialog
from src.payments.payment_handler import deposit_user_balance
from src.utils.media_group_creator import send_media_group


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º
async def all_objects_count_getter(**kwargs):
    all_object_list = await db_get_object()

    status_mapping = {
        "üîÑ": "on_moderation_count",
        "‚úÖ": "submit_count",
        "‚ùå": "deleted_count"
    }

    status_counts = {key: 0 for key in status_mapping.values()}

    for obj in all_object_list:
        status = obj.get("status")
        if status in status_mapping:
            status_counts[status_mapping[status]] += 1

    return status_counts


# –≥–µ—Ç—Ç–µ—Ä, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É, –∞ —Ç–∞–∫–∂–µ —Å–ø–∏—Å–∫–∏ —ç—Ç–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è scrolling group
async def all_objects_count_and_sg_list_getter(**kwargs):
    all_object_list = await db_get_object()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
    result_summary = {
        "on_moderation_count": 0,
        "submit_count": 0,
        "deleted_count": 0,
        "deleted_objects_list": [],
        "confirmed_objects_list": [],
        "moderated_objects_list": []
    }

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞
    for obj in all_object_list:
        status = obj.get("status")
        id = obj['id']
        generate_id = obj['generate_id']
        country = obj['country']

        if status == "üîÑ":
            result_summary["on_moderation_count"] += 1
            result_summary["moderated_objects_list"].append([f'{status} | ID: {generate_id} | {country}', str(id)])
        elif status == "‚úÖ":
            result_summary["submit_count"] += 1
            result_summary["confirmed_objects_list"].append([f'{status} | ID: {generate_id} | {country}', str(id)])
        elif status == "‚ùå":
            result_summary["deleted_count"] += 1
            result_summary["deleted_objects_list"].append([f'{status} | ID: {generate_id} | {country}', str(id)])

    return result_summary


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–æ—Ç–ø—Ä–∞–≤–∫–∏ media_group)
async def admin_open_object(
        callback: CallbackQuery,
        widget: Select,
        dialog_manager: DialogManager,
        item_id: str
):
    # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    object_id = int(item_id)
    chat_id = dialog_manager.event.message.chat.id

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã
    object_data = await send_media_group(dialog_manager, object_id, chat_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º id –∏ data –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–±—ä–µ—Ç–∞
    dialog_manager.dialog_data['admin_open_object_id'] = object_id
    dialog_manager.dialog_data['admin_open_object_data'] = object_data

    # –ß—Ç–æ–±—ã –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–Ω—å—à–µ —á–µ–º —Å–º—Å –æ—Ç –±–æ—Ç–∞
    dialog_manager.show_mode = ShowMode.DELETE_AND_SEND

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–≤–æ–¥–∏–º –º–µ–Ω—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    if object_data['status'] == '‚úÖ':
        await dialog_manager.switch_to(AdminDialog.admin_open_object_confirmed)
    elif object_data['status'] == 'üîÑ':
        await dialog_manager.switch_to(AdminDialog.admin_open_object_moderated)
    elif object_data['status'] == '‚ùå':
        await dialog_manager.switch_to(AdminDialog.admin_open_object_deleted)


# –ò–Ω–≤–µ—Ä—Å–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π is_admin_edit_menu_open
async def invert_admin_edit_menu_open(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    is_admin_edit_menu_open = dialog_manager.dialog_data.get('is_admin_edit_menu_open', False)

    # –ò–Ω–≤–µ—Ä—Å–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    dialog_manager.dialog_data['is_admin_edit_menu_open'] = not is_admin_edit_menu_open


# –ò–Ω–≤–µ—Ä—Å–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π is_admin_delete_object_confirm_menu
async def invert_admin_dell_obj_confirm_menu(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    is_admin_delete_object_confirm_menu = dialog_manager.dialog_data.get('is_admin_delete_object_confirm_menu', False)

    # –ò–Ω–≤–µ—Ä—Å–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    dialog_manager.dialog_data['is_admin_delete_object_confirm_menu'] = not is_admin_delete_object_confirm_menu


# Getter, —Å–æ–æ–±—â–∞—é—â–∏–π, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ edit_menu/delete_menu –∏–ª–∏ –Ω–µ—Ç, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ –æ–±—ä–µ–∫—Ç–∞
async def admin_open_object_confirmed_getter(dialog_manager: DialogManager, **kwargs):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ edit/delete menu
    is_edit_menu_open = dialog_manager.dialog_data.get('is_admin_edit_menu_open')
    is_delete_object_confirm_menu = dialog_manager.dialog_data.get('is_admin_delete_object_confirm_menu')

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ë–î
    object_id = dialog_manager.dialog_data.get('admin_open_object_id')
    object_data = dialog_manager.dialog_data.get('admin_open_object_data')
    payment_date = object_data['payment_date']
    getter_data = await db_get_user(object_id=object_id)

    # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –¥–Ω–µ–π
    if payment_date is None:
        # –ë–µ—Å—Å—Ä–æ—á–Ω—ã–π –æ–±—ä–µ–∫—Ç
        days_left = '–ë–µ—Å—Å—Ä–æ—á–Ω–æ'
    else:
        end_date = payment_date + datetime.timedelta(days=365)
        days_left = abs(end_date - payment_date)
        days_left = str(days_left).split(',')[0]

    # –î–æ–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å
    getter_data['admin_dit_menu_open'] = is_edit_menu_open
    getter_data['admin_delete_object_confirm_menu'] = is_delete_object_confirm_menu
    getter_data['days_left'] = days_left

    return getter_data


# –£–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
async def admin_delete_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    object_id = dialog_manager.dialog_data.get('admin_open_object_id')
    object_data = dialog_manager.dialog_data.get('admin_open_object_data')

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ —Å –≥—Ä—É–ø–ø—ã
    message_ids = object_data['message_ids']
    message_ids = message_ids.split(', ')
    try:
        await dialog_manager.event.bot.delete_messages(chat_id=Config.chat, message_ids=message_ids)
    except:
        print('–ê–¥–º–∏–Ω –ø—ã—Ç–∞–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç. –°–∫—Ä–∏–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ message_id')

    # –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞ –Ω–∞ '–£–¥–∞–ª—ë–Ω'
    new_object_data = {'status': '‚ùå', 'message_ids': None}
    await db_update_object(object_id=object_id, object_data=new_object_data)

    # –û–ø–æ–≤–µ—â–∞–µ–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–∫–Ω–æ
    await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!')
    await dialog_manager.switch_to(AdminDialog.all_objects_confirmed)


# –û–¥–æ–±—Ä–∏—Ç—å –æ–±—ä–µ–∫—Ç, –Ω–∞—Ö–æ–¥—è—â–∏–π—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
async def accept_moderated_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    object_id = dialog_manager.dialog_data.get('admin_open_object_id')
    chat_id = Config.chat
    send_to_chat = True # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ –≥—Ä—É–ø–ø—É, –∞ –Ω–µ –≤ –ª—Å

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ –≥—Ä—É–ø–ø—É
    object_data = await send_media_group(dialog_manager, object_id, chat_id, send_to_chat)
    if not object_data:
        await dialog_manager.event.answer('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!')
        return

    # –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞ –Ω–∞ '–û–¥–æ–±—Ä–µ–Ω'
    new_object_data = {'status': '‚úÖ', 'message_ids': object_data.get('message_ids')}
    await db_update_object(object_id=object_id, object_data=new_object_data)

    # –û–ø–æ–≤–µ—â–∞–µ–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–∫–Ω–æ
    await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω!\n–°–µ–≥–æ–¥–Ω—è –≤—ã –≤ —É–¥–∞—Ä–µ :)')
    await dialog_manager.switch_to(AdminDialog.all_objects_moderated)


# –û—Ç–∫–ª–æ–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç, –Ω–∞—Ö–æ–¥—è—â–∏–π—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
async def reason_object_reject_input(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager
):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    delete_reason = message.html_text
    object_id = dialog_manager.dialog_data.get('admin_open_object_id')
    object_data = dialog_manager.dialog_data.get('admin_open_object_data')
    user_id = object_data.get('owner_id')

    # –ï—Å–ª–∏ –∑–∞ –æ–±—ä–µ–∫—Ç –±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –¥–µ–Ω—å–≥–∏ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–Ω—å–≥–∏
    if object_data.get('payment_date'):
        amount = Config.price_amount
        await deposit_user_balance(amount=amount, message=message, user_id=user_id)

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –≤ –ë–î
    new_object_data = {'status': '‚ùå', 'delete_reason': delete_reason}
    await db_update_object(object_id=object_id, object_data=new_object_data)

    # –û–ø–æ–≤–µ—â–∞–µ–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–∫–Ω–æ
    await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç –æ—Ç–∫–ª–æ–Ω—ë–Ω!')
    await dialog_manager.switch_to(AdminDialog.all_objects_moderated)


# –£–¥–∞–ª–∏—Ç—å —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
async def reason_object_delete_input(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager
):
    delete_reason = message.html_text
    object_id = dialog_manager.dialog_data.get('admin_open_object_id')
    object_data = dialog_manager.dialog_data.get('admin_open_object_data')

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ —Å –≥—Ä—É–ø–ø—ã
    message_ids = object_data['message_ids']
    message_ids = message_ids.split(', ')
    try:
        await dialog_manager.event.bot.delete_messages(chat_id=Config.chat, message_ids=message_ids)
    except:
        print('–ê–¥–º–∏–Ω –ø—ã—Ç–∞–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç. –°–∫—Ä–∏–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ message_id')

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –≤ –ë–î
    new_object_data = {'status': '‚ùå', 'delete_reason': delete_reason, 'message_ids': None}
    await db_update_object(object_id=object_id, object_data=new_object_data)

    # –û–ø–æ–≤–µ—â–∞–µ–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–∫–Ω–æ
    await dialog_manager.event.answer('–û–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!')
    await dialog_manager.switch_to(AdminDialog.all_objects_confirmed)


# –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏—á–∏–Ω—É —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
async def admin_object_delete_reason_getter(dialog_manager: DialogManager, **kwargs):
    delete_reason = dialog_manager.dialog_data.get('admin_open_object_data').get('delete_reason')
    is_edit_menu_open = dialog_manager.dialog_data.get('is_admin_edit_menu_open')
    return {'delete_reason': delete_reason, 'admin_dit_menu_open': is_edit_menu_open}


# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç
async def admin_restore_object(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    object_id = dialog_manager.dialog_data.get('admin_open_object_id')

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ä–µ–∫—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Å–Ω–æ–≤–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
    payment_date = None
    new_object_data = {'status': '‚úÖ', 'payment_date': payment_date, 'delete_reason': None}
    await db_update_object(object_id=object_id, object_data=new_object_data)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ –≥—Ä—É–ø–ø—É
    result_object_data = await send_media_group(dialog_manager, object_id, Config.chat, True)

    if not result_object_data:
        await dialog_manager.event.answer('–ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –≤ —á–∞—Ç! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–µ—Ö –∞–¥–º–∏–Ω—É!')
    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º message_ids
        await db_update_object(object_id=object_id,
                               object_data=result_object_data)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await callback.answer('–û–±—ä–µ–∫—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!')
    await dialog_manager.switch_to(state=AdminDialog.all_objects_deleted)