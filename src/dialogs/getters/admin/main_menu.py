import asyncio

from aiogram.types import Message, CallbackQuery
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Button

from config import Config
from src.database.requests.country import db_get_country, db_update_countries
from src.database.requests.object import db_get_object
from src.database.requests.settings import db_update_info
from src.database.requests.user import db_get_user
from src.dialogs.dialogs_states import AdminDialog
from src.utils.country_updater import get_country_list


# getter –¥–ª—è admin_menu, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ–≥–æ –±–æ—Ç–∞
async def admin_menu_getter(dialog_manager: DialogManager, **kwargs):
    user_list = await db_get_user()
    object_list = await db_get_object()
    country_list = await db_get_country()

    return {
        'all_countries_count': len(country_list),
        'all_objects_count': len(object_list),
        'all_users_count': len(user_list),
    }


# –ò–∑–º–µ–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
async def take_new_info_input(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager
):
    info_text = message.html_text
    await db_update_info(new_info=info_text)

    await dialog_manager.event.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞!')
    await dialog_manager.switch_to(AdminDialog.menu)


# –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø—É—Å—Ç—è –≤—Ä–µ–º—è
async def delete_message_delayed(bot, chat_id, message_id, delay):
  await asyncio.sleep(delay)
  await bot.delete_message(chat_id, message_id)


# –û–±–Ω–æ–≤–ª—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Ç–æ–ø–∏–∫–æ–≤ –≤ —á–∞—Ç–µ
async def update_countries(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    await dialog_manager.event.answer('–û–∂–∏–¥–∞–π—Ç–µ...')

    # –ü–∞—Ä—Å–∏–º –≤—Å–µ —Ç–æ–ø–∏–∫–∏ —á–∞—Ç–∞, –≤—ã–≤–æ–¥–∏ –∏–∑ –Ω–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω —Å id —Ç–æ–ø–∏–∫–∞
    country_list = await get_country_list(Config.chat)

    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await db_update_countries(country_list)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    country_message = '<b>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞! –ü–æ–ª—É—á–µ–Ω—ã –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>\n\n'
    country_count = 1
    for country in country_list:
        country_message += f'{country_count}) {country[0]} - topic_id: {country[1]}\n'
        country_count += 1
    country_message += '\n<b>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥</b>'

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    service_message = await dialog_manager.event.bot.send_message(dialog_manager.event.from_user.id, country_message)
    # –£–¥–∞–ª—è–µ–º —Å–µ—Ä–≤–∏—Å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    asyncio.create_task(
        delete_message_delayed(dialog_manager.event.bot, dialog_manager.event.from_user.id, service_message.message_id,
        delay=10)
    )


# –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–µ
async def pre_mass_send_getter(dialog_manager: DialogManager, **kwargs):
    mass_send_text = dialog_manager.find('mass_send_text').get_value()
    return {'mass_send_text': mass_send_text}


# –û—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –º–∞—Å—Å–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É
async def auto_mass_send(bot, users_list, mass_send_text):
    msg_count = 0

    # —Ä–∞—Å—Å—ã–ª–∞–µ–º —Å–º—Å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ —Å–ø–∏—Å–∫–∞
    for user in users_list:
        telegram_id = user['telegram_id']

        if telegram_id in Config.admin_ids:
            # –ê–¥–º–∏–Ω–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            continue

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await bot.send_message(telegram_id, mass_send_text)
            msg_count += 1
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:\n\n{e}')
        await asyncio.sleep(0.7)

    # –û–ø–æ–≤–µ—â–∞–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
    for admin in Config.admin_ids:
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await bot.send_message(admin, f"üì¢ <b>–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n"
                                          f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ: <code>{msg_count}—à—Ç.</code>")
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ—ã –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:\n\n{e}')


# –ù–∞—á–∞—Ç—å –º–∞—Å—Å–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É
async def start_mass_send(
        callback: CallbackQuery,
        widget: Button,
        dialog_manager: DialogManager
):
    mass_send_text = dialog_manager.find('mass_send_text').get_value()
    users_list = await db_get_user()
    bot = dialog_manager.event.bot

    asyncio.create_task(
        auto_mass_send(bot, users_list, mass_send_text)
    )