import random
from typing import List

from aiogram.utils.media_group import MediaGroupBuilder


# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–∞
async def create_description_for_obj(dict_data: dict=None, state_data: dict=None):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞
    ojb_type = state_data['create_object_data_type'] if state_data else dict_data['obj_type']
    country = state_data['create_object_data_country_name'] if state_data else dict_data['country']
    address = state_data['create_object_data_address'] if state_data else dict_data['address']
    conditions = state_data['create_object_data_conditions'] if state_data else dict_data['conditions']
    description = state_data['create_object_data_description'] if state_data else dict_data['description']
    contacts = state_data['create_object_data_contacts'] if state_data else dict_data['contacts']
    generate_id = state_data['create_object_data_generate_id'] if state_data else dict_data['generate_id']

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    caption = (f"<b>üè¢ {ojb_type} (ID{generate_id})</b>\n"
               f"<b>üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b>\n"
               f"{country}, {address}\n"
               f"üí∏<b> –¶–µ–Ω–∞ –∏ —É—Å–ª–æ–≤–∏—è:</b>\n"
               f"{conditions}\n"
               f"<b>üõã –û–ø–∏—Å–∞–Ω–∏–µ:</b>\n"
               f"{description}\n\n"
               f"<b>‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n"
               f"{contacts}")

    return caption


# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã c –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–±—ä–µ–∫—Ç–µ
async def create_media_group(dict_data: dict=None, state_data: dict=None, photo_list: List[str]=None):
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
    caption = await create_description_for_obj(dict_data, state_data)

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã
    media_group = MediaGroupBuilder(caption=caption)

    if photo_list is None:
        photo_list = dict_data['photos']
        photo_list = photo_list.split(', ')

    for photo in photo_list:
        media_group.add_photo(media=photo)

    media_group = media_group.build()

    return media_group